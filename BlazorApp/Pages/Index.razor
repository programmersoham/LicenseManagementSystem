@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView><Authorized><p>@authMessage</p>
      <button @onclick="logout" class="btn btn-primary">logout</button> 
    </Authorized></AuthorizeView>
<AuthorizeView><NotAuthorized>
    <p>Please log in</p>
    <button class="btn btn-primary" @onclick="RedirectToLogin"> login</button></NotAuthorized></AuthorizeView>
@code {
    private string? authMessage;

    protected override async Task OnInitializedAsync()
    {
        await CheckAuthenticationStateAsync();
    }

    private async Task CheckAuthenticationStateAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            authMessage = $" Welcome {user.Identity?.Name}";
        }
        else
        {

        }
    }
    private void RedirectToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }
     private async void logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
          
        
     }
    
}
